"use client"

import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { ArrowUpDown, CheckCircle, XCircle, Plus } from "lucide-react"

interface Vulnerability {
  id: string
  severity: "Critical" | "High" | "Medium" | "Low"
  cvssScore: number
  epssScore: number
  ciscoScore: number
  package: string
  additionalPackages?: number
  fixed: boolean
  vulnerabilityCount: number
  attempts: number
  ticketStatus: "Create Tic" | "Proposed"
  impact: number
}

const vulnerabilities: Vulnerability[] = [
  {
    id: "CVE-2013-4547",
    severity: "Critical",
    cvssScore: 9.8,
    epssScore: 0.1,
    ciscoScore: 27,
    package: "Pwgen:2.07-1",
    fixed: false,
    vulnerabilityCount: 0,
    attempts: 1,
    ticketStatus: "Create Tic",
    impact: 1,
  },
  {
    id: "CVE-2014-3591",
    severity: "Critical",
    cvssScore: 9.8,
    epssScore: 0.1,
    ciscoScore: 33,
    package: "Multiarch-Support:2.19-18+Deb8u7",
    fixed: false,
    vulnerabilityCount: 0,
    attempts: 3,
    ticketStatus: "Create Tic",
    impact: 3,
  },
  {
    id: "CVE-2015-8325",
    severity: "Critical",
    cvssScore: 9.8,
    epssScore: 0.1,
    ciscoScore: 33,
    package: "Libbkid1:2.25.2-6",
    additionalPackages: 6,
    fixed: false,
    vulnerabilityCount: 0,
    attempts: 3,
    ticketStatus: "Create Tic",
    impact: 3,
  },
  {
    id: "CVE-2016-1234",
    severity: "Critical",
    cvssScore: 9.8,
    epssScore: 0.1,
    ciscoScore: 37,
    package: "Spring-Web:5.3.16",
    additionalPackages: 2,
    fixed: true,
    vulnerabilityCount: 0,
    attempts: 11,
    ticketStatus: "Proposed",
    impact: 10,
  },
  {
    id: "CVE-2016-5678",
    severity: "Critical",
    cvssScore: 9.8,
    epssScore: 0.1,
    ciscoScore: 33,
    package: "Freetype:2.6.3-R0",
    fixed: false,
    vulnerabilityCount: 0,
    attempts: 4,
    ticketStatus: "Create Tic",
    impact: 4,
  },
]

export function VulnerabilityTable() {
  return (
    <div className="rounded-md border">
      <Table>
        <TableHeader>
          <TableRow className="bg-muted/50">
            <TableHead className="w-[200px]">
              <Button variant="ghost" className="h-8 p-0">
                Vulnerability ID
                <ArrowUpDown className="ml-2 h-4 w-4" />
              </Button>
            </TableHead>
            <TableHead>
              <Button variant="ghost" className="h-8 p-0">
                Severity
                <ArrowUpDown className="ml-2 h-4 w-4" />
              </Button>
            </TableHead>
            <TableHead>CVSS</TableHead>
            <TableHead>EPSS</TableHead>
            <TableHead>Cisco</TableHead>
            <TableHead className="min-w-[200px]">Packages</TableHead>
            <TableHead>Fixed</TableHead>
            <TableHead>Vuln.</TableHead>
            <TableHead>Pri.</TableHead>
            <TableHead>Att.</TableHead>
            <TableHead>Ticket Status</TableHead>
            <TableHead>Im.</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {vulnerabilities.map((vuln) => (
            <TableRow key={vuln.id}>
              <TableCell className="font-medium">{vuln.id}</TableCell>
              <TableCell>
                <Badge variant="destructive" className="bg-red-500">
                  {vuln.severity}
                </Badge>
              </TableCell>
              <TableCell className="text-red-500">{vuln.cvssScore}</TableCell>
              <TableCell className="text-green-500">{`<${vuln.epssScore}`}</TableCell>
              <TableCell className="text-green-500">{vuln.ciscoScore}</TableCell>
              <TableCell>
                <div className="flex items-center gap-2">
                  <Badge variant="secondary" className="bg-slate-700 text-white">
                    {vuln.package}
                  </Badge>
                  {vuln.additionalPackages && (
                    <Badge variant="secondary" className="bg-slate-700 text-white">
                      +{vuln.additionalPackages}
                    </Badge>
                  )}
                </div>
              </TableCell>
              <TableCell>
                {vuln.fixed ? (
                  <CheckCircle className="h-4 w-4 text-green-500" />
                ) : (
                  <XCircle className="h-4 w-4 text-red-500" />
                )}
              </TableCell>
              <TableCell>{vuln.vulnerabilityCount}</TableCell>
              <TableCell>
                <Button variant="ghost" size="sm" className="h-8 w-8 p-0">
                  <ArrowUpDown className="h-4 w-4" />
                </Button>
              </TableCell>
              <TableCell>{vuln.attempts}</TableCell>
              <TableCell>
                <Button
                  variant="ghost"
                  size="sm"
                  className={`gap-2 ${vuln.ticketStatus === "Proposed" ? "text-blue-500" : "text-slate-500"}`}
                >
                  <Plus className="h-4 w-4" />
                  {vuln.ticketStatus}
                </Button>
              </TableCell>
              <TableCell>{vuln.impact}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </div>
  )
}

